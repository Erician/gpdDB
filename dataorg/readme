We use blink tree to organize the data, and one node of the tree occupies 1 block. 

Leaf nodes(level is 0x0000) store data and index nodes(level is not 0x0000) stores indexes

the format of supernode:
offset:  ____________________
0x00    |blkID               |
        |rootNodeID          |
header  |......              |
        |____________________|

the format of data Node:
offset:  ____________________
0x00    |blkID               |
        |......              |
header  |......              |
        |                    |
0x28    |--------------------|
        |slot0               |
        |--------------------|
record  |slot1               |
        |--------------------|
        |.......             |
        |____________________|

the format of slot:

offset:         ____________________
x              |keyLen              |
x+2            |--------------------|
               |key string          |
x+2+keyLen     |--------------------|
               |valueLen            |
x+2+keyLen+2   |--------------------|
               |value string        |
               |____________________|

the format of data index Node:
offset:  ____________________
0x00    |blkID               |
        |......              |
header  |......              |
        |                    |
0x28    |--------------------|
        |slot0               |
        |--------------------|
record  |slot1               |
        |--------------------|
        |.......             |
        |____________________|

the format of slot:

offset:         ____________________
x              |keyLen              |
x+2            |--------------------|
               |key string          |
x+2+keyLen     |--------------------|
               |indexLen(useless)   |
x+2+keyLen+2   |--------------------|
               |index               |
               |____________________|

index and key

leftIndex  | key | rightIndex
NOTE: every key in the node pointed by leftIndex to is strickly smaller than key, and 
the other is bigger than key 




